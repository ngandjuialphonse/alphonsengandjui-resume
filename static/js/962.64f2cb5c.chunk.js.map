{"version":3,"file":"static/js/962.64f2cb5c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","pages/Projects.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","// src/pages/Projects.tsx\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FC, useState } from 'react';\r\nimport { FaGithub, FaExternalLinkAlt } from 'react-icons/fa';\r\n\r\ninterface Project {\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n  technologies: string[];\r\n  githubUrl: string;\r\n  liveUrl?: string;\r\n  category: 'devops' | 'cloud' | 'automation';\r\n}\r\n\r\nconst projects: Project[] = [\r\n  {\r\n    title: \"CI/CD Pipeline Automation\",\r\n    description: \"Automated deployment pipeline using Jenkins, Docker, and Kubernetes for microservices architecture.\",\r\n    image: \"/projects/cicd.jpg\",\r\n    technologies: [\"Jenkins\", \"Docker\", \"Kubernetes\", \"Git\"],\r\n    githubUrl: \"https://github.com/yourusername/cicd-pipeline\",\r\n    category: \"devops\"\r\n  },\r\n  {\r\n    title: \"Cloud Infrastructure\",\r\n    description: \"Multi-cloud infrastructure management using Terraform and Ansible.\",\r\n    image: \"/projects/cloud.jpg\",\r\n    technologies: [\"AWS\", \"Azure\", \"Terraform\", \"Ansible\"],\r\n    githubUrl: \"https://github.com/yourusername/cloud-infra\",\r\n    category: \"cloud\"\r\n  }\r\n  // Add more projects...\r\n];\r\n\r\nconst categories = [\r\n  { id: 'all', label: 'All' },\r\n  { id: 'devops', label: 'DevOps' },\r\n  { id: 'cloud', label: 'Cloud' },\r\n  { id: 'automation', label: 'Automation' }\r\n];\r\n\r\nconst Projects: FC = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [hoveredProject, setHoveredProject] = useState<string | null>(null);\r\n\r\n  const filteredProjects = selectedCategory === 'all' \r\n    ? projects \r\n    : projects.filter(project => project.category === selectedCategory);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      className=\"min-h-screen py-16 px-4 sm:px-6 lg:px-8\"\r\n    >\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.h1\r\n          initial={{ y: -20, opacity: 0 }}\r\n          animate={{ y: 0, opacity: 1 }}\r\n          className=\"text-4xl md:text-5xl font-bold text-center mb-8\"\r\n        >\r\n          Featured Projects\r\n        </motion.h1>\r\n\r\n        {/* Category Filter */}\r\n        <motion.div \r\n          initial={{ y: 20, opacity: 0 }}\r\n          animate={{ y: 0, opacity: 1 }}\r\n          className=\"flex justify-center gap-4 mb-12\"\r\n        >\r\n          {categories.map(category => (\r\n            <button\r\n              key={category.id}\r\n              onClick={() => setSelectedCategory(category.id)}\r\n              className={`px-4 py-2 rounded-full transition-all ${\r\n                selectedCategory === category.id\r\n                  ? 'bg-secondary text-primary'\r\n                  : 'bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600'\r\n              }`}\r\n            >\r\n              {category.label}\r\n            </button>\r\n          ))}\r\n        </motion.div>\r\n\r\n        {/* Projects Grid */}\r\n        <motion.div \r\n          layout\r\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n        >\r\n          <AnimatePresence>\r\n            {filteredProjects.map((project, index) => (\r\n              <motion.div\r\n                key={project.title}\r\n                layout\r\n                initial={{ opacity: 0, y: 50 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: 50 }}\r\n                transition={{ delay: index * 0.1 }}\r\n                className=\"relative group\"\r\n                onHoverStart={() => setHoveredProject(project.title)}\r\n                onHoverEnd={() => setHoveredProject(null)}\r\n              >\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden\">\r\n                  <div className=\"relative aspect-video\">\r\n                    <img \r\n                      src={project.image} \r\n                      alt={project.title}\r\n                      className=\"object-cover w-full h-full\"\r\n                    />\r\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\" />\r\n                  </div>\r\n                  \r\n                  <div className=\"p-6\">\r\n                    <h3 className=\"text-xl font-bold mb-2\">{project.title}</h3>\r\n                    <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\r\n                      {project.description}\r\n                    </p>\r\n                    \r\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                      {project.technologies.map(tech => (\r\n                        <span\r\n                          key={tech}\r\n                          className=\"px-3 py-1 bg-secondary/10 text-secondary rounded-full text-sm\"\r\n                        >\r\n                          {tech}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-4\">\r\n                      <a\r\n                        href={project.githubUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"flex items-center gap-2 text-gray-600 dark:text-gray-300 hover:text-secondary transition-colors\"\r\n                      >\r\n                        <FaGithub className=\"w-5 h-5\" />\r\n                        <span>Code</span>\r\n                      </a>\r\n                      {project.liveUrl && (\r\n                        <a\r\n                          href={project.liveUrl}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"flex items-center gap-2 text-gray-600 dark:text-gray-300 hover:text-secondary transition-colors\"\r\n                        >\r\n                          <FaExternalLinkAlt className=\"w-5 h-5\" />\r\n                          <span>Live Demo</span>\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Projects;"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","projects","title","description","image","technologies","githubUrl","category","categories","label","Projects","selectedCategory","setSelectedCategory","hoveredProject","setHoveredProject","filteredProjects","project","_jsx","motion","div","opacity","animate","className","_jsxs","h1","y","onClick","layout","index","exit","transition","delay","onHoverStart","onHoverEnd","src","alt","tech","href","target","rel","FaGithub","liveUrl","FaExternalLinkAlt"],"sourceRoot":""}